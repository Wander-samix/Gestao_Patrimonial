"""
Django settings for gestao_patrimonial project.
Generated by 'django-admin startproject' using Django 5.1.5.
"""

import os
from pathlib import Path
import dj_database_url

# Caminho base do projeto
BASE_DIR = Path(__file__).resolve().parent.parent

# Segurança
SECRET_KEY = os.environ['SECRET_KEY']
DEBUG = os.environ.get('DEBUG', 'False') == 'True'
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')

# Configuração correta dos arquivos estáticos
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

# Garante que a pasta static/ exista
if not os.path.exists(BASE_DIR / "static"):
    os.makedirs(BASE_DIR / "static")

# Configuração dos templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],  # Buscará templates na pasta templates/
        'APP_DIRS': True,
        'OPTIONS': {
            'builtins': [
                "core.templatetags.saldo",
            ],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Apps instalados
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Apps do projeto
    'core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gestao_patrimonial.urls'
WSGI_APPLICATION = 'gestao_patrimonial.wsgi.application'

# Configuração do Banco de Dados PostgreSQL local (comentada)
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'gestao_utf8',  # Nome do banco
#         'USER': 'postgres',     # Usuário correto
#         'PASSWORD': '123',      # Substitua pela senha correta
#         'HOST': 'localhost',    # Certifique-se de que está correto
#         'PORT': '5432',
#         'OPTIONS': {
#             'client_encoding': 'UTF8',
#         },
#     }
# }

# Banco de Dados via DATABASE_URL (Render, Heroku, .env, etc.)
DATABASES = {
    'default': dj_database_url.parse(
        os.environ.get(
            'DATABASE_URL',
            'postgres://postgres:123@localhost:5432/gestao_utf8'  # fallback local
        ),
        conn_max_age=600,
        ssl_require=bool(os.environ.get('DATABASE_SSL', False)),
    )
}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Redirecionamentos de login
LOGIN_REDIRECT_URL = 'lista_produtos'
LOGOUT_REDIRECT_URL = 'login'
LOGIN_URL = 'login'

# Modelo de usuário customizado
AUTH_USER_MODEL = 'core.Usuario'

# Chave da API Cosmos (pode também ser movida para env se desejar)
COSMOS_API_KEY = '3fTpL-M47SqFLJ8qq1RAPg'
