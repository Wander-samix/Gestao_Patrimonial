# Generated by Django 5.1.5 on 2025-04-22 08:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricula', models.CharField(max_length=50, unique=True)),
                ('nome_completo', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('telefone', models.CharField(max_length=15)),
                ('curso', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('endereco', models.TextField(blank=True)),
                ('telefone', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('matricula', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Matrícula')),
                ('papel', models.CharField(choices=[('admin', 'Admin'), ('operador', 'Operador'), ('tecnico', 'Técnico')], default='operador', max_length=20)),
                ('ativo', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='usuarios_grupo', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuarios_permissao', to='auth.permission')),
                ('areas', models.ManyToManyField(blank=True, related_name='usuarios', to='core.area')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LogAcao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(max_length=255)),
                ('detalhes', models.TextField(blank=True)),
                ('data_hora', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('aguardando_aprovacao', 'Aguardando Aprovação'), ('aprovado', 'Aprovado (Aguardando Separação)'), ('separado', 'Separado'), ('entregue', 'Entregue')], default='aguardando_aprovacao', max_length=30)),
                ('data_separacao', models.DateTimeField(blank=True, null=True)),
                ('data_retirada', models.DateTimeField(blank=True, null=True)),
                ('retirado_por', models.CharField(blank=True, max_length=100, null=True)),
                ('observacao', models.TextField(blank=True, null=True)),
                ('data_necessaria', models.DateField(blank=True, null=True)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos_aprovados', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nfe_numero', models.CharField(blank=True, max_length=20, null=True, verbose_name='NFe Nº')),
                ('codigo_barras', models.CharField(max_length=100)),
                ('descricao', models.CharField(max_length=255)),
                ('lote', models.PositiveIntegerField(editable=False)),
                ('validade', models.DateField(blank=True, null=True)),
                ('quantidade', models.PositiveIntegerField(default=0, help_text='Estoque bruto cadastrado', verbose_name='Quantidade Atual')),
                ('quantidade_inicial', models.PositiveIntegerField(default=0, help_text='Não é alterado após criação', verbose_name='Quantidade Cadastrada')),
                ('preco_unitario', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo')], default='ativo', max_length=10)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.area')),
                ('criado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.fornecedor')),
            ],
        ),
        migrations.CreateModel(
            name='NFe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=50, unique=True)),
                ('data_emissao', models.DateField()),
                ('cnpj_fornecedor', models.CharField(max_length=14)),
                ('peso', models.FloatField()),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.area')),
                ('itens_vinculados', models.ManyToManyField(to='core.produto')),
            ],
        ),
        migrations.CreateModel(
            name='MovimentacaoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída')], max_length=10)),
                ('data', models.DateTimeField(default=django.utils.timezone.now)),
                ('quantidade', models.IntegerField()),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cliente')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('nota_fiscal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.nfe')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto')),
            ],
        ),
        migrations.CreateModel(
            name='ItemPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField()),
                ('liberado', models.IntegerField(blank=True, null=True)),
                ('observacao', models.CharField(blank=True, max_length=255)),
                ('estoque_no_pedido', models.PositiveIntegerField(blank=True, null=True, verbose_name='Estoque disponível no momento do pedido')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.pedido')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto')),
            ],
        ),
        migrations.CreateModel(
            name='SaidaProdutoPorPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField()),
                ('data_saida', models.DateTimeField(auto_now_add=True)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pedido')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto')),
            ],
        ),
        migrations.CreateModel(
            name='SessionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, verbose_name='Chave de Sessão')),
                ('login_time', models.DateTimeField(verbose_name='Login em')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='Logout em')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Duração da Sessão')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Sessão',
                'verbose_name_plural': 'Logs de Sessão',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='SubItemPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField()),
                ('estoque_no_pedido', models.PositiveIntegerField(blank=True, null=True, verbose_name='Estoque disponível no momento do pedido')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subitens', to='core.pedido')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.produto')),
            ],
        ),
        migrations.CreateModel(
            name='ConfiguracaoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estoque_minimo', models.PositiveIntegerField()),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.area')),
            ],
            options={
                'unique_together': {('area',)},
            },
        ),
    ]
